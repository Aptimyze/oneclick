- label= t(dir).titleize
- ad = "#{dir}_arrive_depart"
- field = "#{dir}_trip_date".to_sym
- time_field = "#{dir}_trip_time".to_sym
- other = (dir == "outbound") ? 'return' : 'outbound'

%label.sr-only{for: "trip_proxy_#{dir}_arrive_depart"}= "#{dir} trip date and time"
%label.col-md-3.control-label= label

.col-md-3
  -# Note that the collection assumes that the departing_at option evaluates as true in the proxy.  This should mirror trip_part.is_depart behavior
  = f.input ad, wrapper: :horizontal_labelless_select, collection: [[t(:arriving_by), false], [t(:departing_at), true]], include_blank: false, label_method: :first, value_method: :last

.col-md-6{:style => "padding: 0px;"}

  %label.sr-only{for: "trip_proxy_#{dir}_trip_date"}= "#{dir} trip date"
  = f.input field, label: false, class: 'col-md-6', wrapper: :trip_dates do
    = f.input_field field, class: 'form-control col-md-6', id: "trip_proxy_#{dir}_trip_date", autocomplete: 'off'

  %label.sr-only{for: "trip_proxy_#{dir}_trip_time"}= "#{dir} trip time"
  = f.input time_field, label: false, class: 'col-md-6', wrapper: :trip_dates do
    = f.input_field time_field, class: 'form-control col-md-6', id: "trip_proxy_#{dir}_trip_time", autocomplete: 'off'
  / The <script> for date&time picker
  :javascript
    $('#trip_proxy_#{dir}_trip_date').datetimepicker({
      defaultDate: new Date(),
      minDate: moment(0, "HH"),
      pickTime: false,
      format: 'MM/DD/YYYY',
      language: '#{I18n.locale}' 
    });

    $('#trip_proxy_#{dir}_trip_time').datetimepicker({
      defaultDate: moment().next15(),
      pickDate: false,
      useSeconds: false,
      minuteStepping: 15,
      format: 'h:mm A',
      language: '#{I18n.locale}'
    });

