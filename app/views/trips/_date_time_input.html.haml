- label= t(dir).titleize
- ad = "#{dir}_arrive_depart"
- field = "#{dir}_trip_date".to_sym
- time_field = "#{dir}_trip_time".to_sym
- other = (dir == "outbound") ? 'return' : 'outbound'

%label.col-md-3.control-label{:for => "#{dir}Options"}= label

.col-md-3
  -# Note that the collection assumes that the departing_at option evaluates as true in the proxy.  This should mirror trip_part.is_depart behavior
  = f.input ad, wrapper: :horizontal_labelless_select, collection: [[t(:arriving_by), false], [t(:departing_at), true]], include_blank: false, label_method: :first, value_method: :last

.col-md-6{:style => "padding: 0px;"}

  = f.input field, label: false, class: 'col-md-6', wrapper: :trip_dates,
          input_html: { tabindex: 1 } do
    = f.input_field field, class: 'form-control col-md-6', id: "trip_proxy_#{dir}_trip_date", autocomplete: 'off', tabindex: 1

  = f.input time_field, label: false, class: 'col-md-6', wrapper: :trip_dates,
          input_html: { tabindex: 1 } do
    = f.input_field time_field, class: 'form-control col-md-6', id: "trip_proxy_#{dir}_trip_time", autocomplete: 'off', tabindex: 1 
  / The <script> for date&time picker
  :javascript
    var dateField = $('#trip_proxy_#{dir}_trip_date');
    var dateFormat = 'MM/DD/YYYY';
    dateField.datetimepicker({
      defaultDate: new Date(),
      minDate: moment(0, "HH"),
      pickTime: false,
      language: '#{I18n.locale}' 
    });

    dateField.on('focusout',function (e) {
      var newDate = moment(dateField.val(), dateFormat);
      if(!newDate.isValid() || newDate < dateField.data('DateTimePicker').options.minDate) {
        dateField.data("DateTimePicker").setValue(dateField.data("DateTimePicker").date);
      }
    });

    var timeField = $('#trip_proxy_#{dir}_trip_time');
    var timeFormat = 'h:mm A';
    timeField.datetimepicker({
      defaultDate: moment().next15(),
      pickDate: false,
      useSeconds: false,
      minuteStepping: 15,
      language: '#{I18n.locale}'
    });

    timeField.on('focusout',function (e) {
      if(!moment(timeField.val(), timeFormat).isValid()) {
        timeField.data("DateTimePicker").setValue(timeField.data("DateTimePicker").date);
      }
    });

    function is_touch_device() {
     return (('ontouchstart' in window)
          || (navigator.MaxTouchPoints > 0)
          || (navigator.msMaxTouchPoints > 0));
    }

    if(is_touch_device()) {
      dateField.attr('readonly', true);
      timeField.attr('readonly', true);
    }
