%p
  %select.input-sm#per_page_select
    - [10, 25, 50, 100].each do |per_page|
      - if per_page == @per_page.to_i
        %option{value: "#{per_page}", selected: true}
          = per_page
      - else
        %option{value: "#{per_page}"}
          = per_page
  :javascript
    $('#per_page_select').on('change', function(){
      var params = #{@params.to_json};
      params.per_page = $(this).val();
      window.location.href = "#{url_for(locale: params[:locale])}?" + $.param(params);
    });
  %span
    = "records per page"

%table.table.table-condensed.table-striped.table-bordered.table-hover#datatable
  %thead
    %tr
      -if show_username
        %th= sort_link @q, "user_name_case_insensitive", t(:traveler)
      %th= sort_link @q, "trip_date", t(:trip_date)
      %th= sort_link @q, "from_address", t(:from)
      %th= sort_link @q, "to_address", t(:to)
      %th= sort_link @q, "trip_purpose", t(:trip_purpose)
      - if Rating.feedback_on?
        %th.center= sort_link @q, "trip_rating", t(:rating)
        %th.center.nowrap= t(:feedback)
      -if Oneclick::Application.config.allows_booking
        %th.center
          = t(:cancel_booking)
        %th.center
          = "Trip Confirmation Numbers"
      %th.center= t(:actions)
      - if ENV['SHOWALL']
        %th.center= t(:max_notes)
      - if can? :send_follow_up, Trip
        %th= t(:send_follow_up_email)
      %th= t(:trip_details)
  %tbody{ :id => 'trips_table'}
    - trips = RateableDecorator.decorate_collection(trips)
    - rateable_trip_ids = []
    - bookeable_trip_ids = []
    - trips.each do |trip|
      -tripID = "trip#{trip.id}"
      %tr
        - if show_username
          %td= trip.user
        %td.nowrap= format_date(trip.trip_datetime)
        %td= trip.from_place.name
        %td= trip.to_place.name
        %td= t(trip.trip_purpose.name)
        - if Rating.feedback_on?
          %td.nowrap{id: "#{tripID}Rating"}
            = trip.rating_in_stars
          %td.center.nowrap
            - if can? :create, trip.ratings.build
              - if (not trip.in_the_future and can? :create, trip.ratings.build) or Rails.env.development?
                - rateable_trip_ids << trip.id
                - modal_name = "##{tripID}RatingModal"
                %button.btn.btn-default.action-button{data: {toggle: 'modal', target: modal_name, remote: new_trip_rating_path(trip)}}
                  = t(:feedback)
        -if Oneclick::Application.config.allows_booking
          %td.center
            -if trip.is_booked? and trip.in_the_future
              = button_tag :type => 'button', "data-target" => "#cancelTripConfirmDialog", "data-toggle" => "modal", :alt => t(:cancel_trip), :title => t(:cancel_trip), :class => "btn action-button btn-danger delete-button" do
                = t(:cancel)
              #cancelTripConfirmDialog.modal.fade.col-sm-12{"aria-describedby" => t(:cancel_trip), :role => "dialog", "aria-hidden" => 'true', :tabindex => "-1"}
                .modal-dialog
                  .modal-content
                    .modal-header
                      .pull-right
                        = link_to cancel_user_trip_path(traveler, trip), {:class => "btn action-button", :method => :post} do
                          = t(:ok)
                        = button_tag class: 'btn action-button', data: {dismiss: 'modal'} do
                          = t(:cancel)
                      .modal-title{:style => "text-align:left;"}
                        %b
                          = t(:site_title)
                    .modal-body{:style => "text-align:left;"}
                      = t(:confirm_cancel_trip)
          %td.center
            - trip.trip_parts.each do |tp|
              - tp.itineraries.where.not(booking_confirmation: nil).each do |itinerary|
                =itinerary.booking_confirmation
        %td.center.nowrap
          = link_to repeat_user_trip_path(traveler, trip), {:alt => t(:repeat_trip), :title => t(:repeat_trip), :class => "btn btn-sm", "aria-label" => "#{t(:repeat_trip)}"} do
            %i.fa.fa-rotate-right
          - if not trip.is_booked?
            - if trip.in_the_future
              = link_to edit_user_trip_path(traveler, trip), {:class => "btn btn-sm", :alt => t(:edit_trip), :title => t(:edit_trip), "aria-label" => "#{t(:edit_trip)}"} do
                %i.fa.fa-edit
            = button_tag :type => 'button', "data-target" => "#deleteTrip" + trip.id.to_s + "ConfirmDialog", "data-toggle" => "modal", :alt => t(:remove_trip), :title => t(:remove_trip), :class => "btn btn-sm btn-danger delete-button", "aria-label" => "#{t(:remove_trip)}" do
              %i.fa.fa-times
            .modal.fade.col-sm-12{:id => "deleteTrip#{trip.id}ConfirmDialog", "aria-describedby" => t(:remove_trip), :role => "dialog", "aria-hidden" => 'true', :tabindex => "-1"}
              .modal-dialog
                .modal-content
                  .modal-header
                    .pull-right
                      = link_to user_trip_path(traveler, trip), {:style => 'margin-right: 5px;', :class => "btn action-button", :method => :delete} do
                        = t(:ok)
                      = button_tag class: 'btn action-button', data: {dismiss: 'modal'} do
                        = t(:cancel)
                    .modal-title{:style => "text-align:left;"}
                      %b
                        = t(:site_title)
                  .modal-body{:style => "text-align:left;"}
                    = t(:confirm_remove_trip)
        - if ENV['SHOWALL']
          %td= "%s / %s" % [trip.outbound_part.max_notes_count, trip.return_part.max_notes_count]
        - if can? :send_follow_up, trip
          %td.center
            = link_to email_feedback_user_trip_path(traveler, trip, locale: I18n.locale), class: "btn action-button", "aria-label" => "#{t(:send_follow_up_email)}" do
              - t(:send)
        %td.center
          = link_to plan_user_trip_path(traveler, trip) do
            =t(:details)
- rateable_trip_ids.each do |rateable_trip_id|
  = render partial: 'trips/trip_rating', locals: {id: rateable_trip_id}

.row
  .col-sm-6
    .pull-left
      = page_entries_info @trip_views, :theme => 'twitter-bootstrap-3' rescue nil
  .col-sm-6
    .pull-right
      = paginate @trip_views, :params => {per_page: @per_page}, :theme => 'twitter-bootstrap-3' rescue nil
