-# Form for creating or editing a provider
= simple_form_for [:admin, @provider],
        url: update2_admin_provider_path,
        method: 'put',
        remote: true,
        html: { class: 'form-horizontal', multipart: true, id: 'provider-data-form' },
        wrapper: :horizontal_form do |f|
  = f.error_notification message: print_messages(f)
  = f.input :name, label: translate_helper(:provider_name)
  .form-group.file.optional.provider_logo
    = f.input :logo, input_html: { id: "provider-logo-upload-real", class: "hidden"}, :as => :file, wrapper: false
    .col-sm-9
      %button.btn.btn-default.btn-svc-data#provider-logo-upload-btn= @provider.logo_url.nil? ? "Upload Logo" : "Replace Image"
      %img.logo-display-img#logo-upload-img{src: @provider.logo_url}
      -if @provider.logo_url.nil?
        %span.subtle-text jpg, gif, png
  = f.input :admin_user, label: translate_helper(:admin_user),
    placeholder: @provider.admin_user.nil? ? translate_helper(:admin_user_placeholder_text) : @provider.admin_user.email,
    input_html: {value: @provider.admin_user.nil? ? nil : @provider.admin_user.email}
  %input{:name => "provider[staff_ids]", :type => 'hidden'}
  .pull-right
    = f.button :submit, translate_helper(:save), class: "btn btn-default btn-svc-data", id: "save-provider-form-btn"
    .btn.btn-link#edit-provider-form-btn.hidden edit



:javascript
  $(document).ready(function() {

    // Form Read-Only Helper Function
    var toggleFormReadOnly = function(formId, hiddenElements) {

      // Set read only variable to opposite of form's data-readonly property, and toggle that property.
      var readonly = !$(formId).data('readonly');
      console.log("Read only is now ", readonly);
      $(formId).data('readonly', readonly);

      // Set all form inputs to readonly value.
      $(formId + ' :input.form-control').attr("readonly", readonly);

      // Toggle hidden on any elements to hide.
      for (var i = 0; i < hiddenElements.length; i++) {
        $(hiddenElements[i]).toggleClass('hidden');
      }
    }

    // Handle logo upload via proxy button
    $('#provider-logo-upload-btn').on("click", function(e) {
      e.preventDefault ? e.preventDefault() : e.returnValue = false;
      $('#provider-logo-upload-real').click();
    });

    // Preview logo before upload
    $('#provider-logo-upload-real').change(function(e) {
      $('#logo-upload-img').attr("src", URL.createObjectURL(event.target.files[0]));
    });

    // Edit Button handler
    $('#edit-provider-form-btn').on("click", function(e) {
      e.preventDefault();
      toggleFormReadOnly('#provider-data-form', ['#provider-logo-upload-btn', '#save-provider-form-btn', '#edit-provider-form-btn']);
    });

    // Handle Form submit
    $('#provider-data-form')
    .on("ajax:beforeSend", function(evt,xhr,settings) {
      console.log("Before AJAX Send", arguments);
    })
    .on("ajax:success", function(evt, data, status, xhr) {
      console.log("AJAX Success!", arguments);
      // On success, refresh just the provider form partial
      $('#provider-data-form').replaceWith(xhr.responseText);
      toggleFormReadOnly('#provider-data-form', ['#provider-logo-upload-btn', '#save-provider-form-btn', '#edit-provider-form-btn']);
    })
    .on("ajax:complete", function(evt, xhr, status) {
      console.log("AJAX Complete", arguments);
    })
    .on("ajax:error", function(evt, xhr, status, error){
      console.log("AJAX Error", arguments);
    });

    /*
    // On Save Button click, make all inputs readonly and hide upload button
    $('#save-provider-form-btn').on("click", function(e) {
      console.log("Provider Form Save Button Clicked", e);
      $('#provider-data-form :input.form-control').attr("readonly", "readonly");
      $('#provider-logo-upload-btn').addClass("hidden");
      $(this).addClass("hidden");
      $('#edit-provider-form-btn').removeClass("hidden");
    });

    // On Edit Button click, make all inputs editable and display upload button
    $('#edit-provider-form-btn').on("click", function(e) {
      console.log("Provider Form Edit Button Clicked", e);
      $('#provider-data-form :input.form-control').attr("readonly", null);
      $('#provider-logo-upload-btn').removeClass("hidden");
      $(this).addClass("hidden");
      $('#save-provider-form-btn').removeClass("hidden");
    });

    */
  });
