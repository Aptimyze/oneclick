- mode_list = ['paratransit', 'transit', 'taxi']

#services-menu
  .row
    .col-md-8.col-sm-10.col-xs-12.center
      .panel.panel-servicedata
        .panel-heading
          %h4.panel-title
            = translate_helper(:services)
            = add_tooltip("services_info_help", "fa fa-question-circle", nil)
        .panel-body.form-horizontal
          .form-group.select
            %label.select.control-label.col-sm-3 Add a service
            .col-sm-9
              %select.select.form-control#select-new-service-type
                %option{value: ''} Select a service type
                - mode_list.each do |m|
                  %option{value: m}= translate_helper("mode_#{m}_name".to_sym)
  .row
    .col-md-8.col-sm-10.col-xs-12.center
      .panel.panel-servicedata
        %ul.nav.nav-tabs{role: "tablist"}
          - @provider.services.each_with_index do |s, i|
            = render partial: "admin/services/service_tab", locals: {new_service: false, service: s, active: i == @provider.services.length - 1}
          - mode_list.each do |m|
            = render partial: "admin/services/service_tab", locals: {new_service: true, mode: m, active: false}
        .tab-content#services-tab-content
          - @provider.services.each_with_index do |s, i|
            = render partial: "admin/services/service_tab_content", locals: {new_service: false, service: s, active: i == @provider.services.length - 1}
          - mode_list.each do |m|
            = render partial: "admin/services/service_tab_content", locals: {new_service: true, mode: m, active: false}

:javascript
  $(document).ready(function() {

    // Render appropriate service partials on menu select
    $('#select-new-service-type').change(function(e) {
      var mode = this.value;

      // Make appropriate mode tab visible and active
      $(".new-service-tab").addClass("hidden");

      if(mode) {
        $(`#new-${mode}-service-tab`).removeClass("hidden");
        $(`#new-${mode}-service-tab > a`).click();
      } else {
        $(".new-service-tab-pane").addClass("hidden");
        if($(".service-tab-link")) {
          $(".service-tab-link")[0].click();
        }
      }
    });

    // Prevent double form submit on save click
    $('.save-service-form-btn').on("click", function(e) {
      e.preventDefault();
      var serviceId = $(this).data("service-id");
      $(`form[data-service-id=${serviceId}]`).submit();
    })

    // Handle New Service Creation
    $('.new-service-tab-pane > form')
    .on("ajax:success", function(evt, data, status, xhr) {
      console.log("Service Created Successfully", arguments);
      $('#services-menu').replaceWith(data); // Refresh this partial
    });

    // Handle logo upload via proxy button
    $('.service-logo-upload-btn').on("click", function(e) {
      e.preventDefault ? e.preventDefault() : e.returnValue = false;
      var serviceId = $(this).data("service-id");
      $(`.service-logo-upload-real[data-service-id=${serviceId}]`).click();
    });

    // Preview logo before upload
    $('.service-logo-upload-real').change(function(e) {
      var serviceId = $(this).data("service-id");
      $(`.logo-upload-img[data-service-id=${serviceId}]`).attr("src", URL.createObjectURL(event.target.files[0]));
    });

  });
