= simple_form_for service || :service,
        url: service.nil? ? admin_provider_services_path(@provider) : admin_provider_service_path(@provider, service_id),
        remote: true,
        html: { class: 'form-vertical service-details-form', multipart: true },
        data: {type: :html, "service-id" => service_id, "form-index" => form_index},
        authenticity_token: true,
        wrapper: :vertical_form do |f|
  = f.error_notification message: print_messages(f)
  = f.input :county_endpoint_array,
      label: "Primary Service Location",
      placeholder: "List county names separated by commas",
      input_html: { value: service.county_endpoint_array ? service.county_endpoint_array.join(', ') : "" }
  = f.input :county_coverage_array,
      label: "Secondary Locations Covered",
      placeholder: "List county names separated by commas",
      input_html: { value: service.county_coverage_array ? service.county_coverage_array.join(', ') : "" }
  = LeafletMap({ :mapid => "lmap_service_area_#{service.id}",
    :multipolygons => service.get_polylines,
    :tile_provider => 'GOOGLEMAP',
    :min_zoom => 3,
    :max_zoom => 15,
    :style => "height:500px;",
    :do_not_show_map => true })
  .pull-right
    = f.button :submit, translate_helper(:save), class: "btn btn-default btn-svc-data save-service-form-btn"
    .btn.btn-link.hidden.edit-service-form-btn edit
    .btn.btn-link.show-map-btn refresh map

:javascript
  $(document).ready(function() {

    // Setup form, setting parameters via (ruby) string interpolation
    var form = setupServiceForm("#{service_id}", "#{form_index}", ("#{new_service}" === "true"));
    var theMap = CsMaps['lmap_service_area_#{service_id}'];

    // Show Map Button for Test
    form.$('.show-map-btn').on("click", function(e) {
      console.log("Refresh map button clicked");
      if(theMap) {theMap.showMap()};
    });

  });
