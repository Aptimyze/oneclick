- this_path = "admin/services/form_parts/paratransit_part4"
- form_index = 4
- service_id = new_service ? "new-#{mode}" : service.id
- booking_services = BookingServices::AGENCY.sort.map {|k,v| [translate_helper(k), v] }.unshift(["Select a booking service", 'placeholder'])

= simple_form_for service || :service,
        url: service.nil? ? admin_provider_services_path(@provider) : admin_provider_service_path(@provider, service_id),
        remote: true,
        html: { class: 'form-horizontal service-details-form', multipart: true },
        data: {type: :html, "service-id" => service_id, "form-index" => form_index},
        authenticity_token: true,
        wrapper: :horizontal_form do |f|
  = f.error_notification message: print_messages(f)

  -# Hidden Input tells the controller which partial to send back.
  %input.hidden{name: "service_details_partial", type: "text", value: this_path }

  .service-details-container
    = f.input :booking_profile,
      as: :select,
      :collection => booking_services,
      selected: service.booking_profile.nil? ? 'placeholder' : service.booking_profile,
      label_html: { class: "header-label"},
      input_html: { class: "select-booking-profile"}
    = render partial: "admin/services/form_parts/booking_profile_form_ridepilot", locals: {f:f, service:service}
    = render partial: "admin/services/form_parts/booking_profile_form_trapeze", locals: {f:f, service:service}
    = render partial: "admin/services/form_parts/booking_profile_form_ecolane", locals: {f:f, service:service}

  -# .service-details-container
  -#   %h4= "Fare Structures #{service.fare_structures.count}"
  -#   = f.input :fare_structures,
  -#     as: :select,
  -#     :collection => [["Flat Fare", 0], ["Mileage", 1], ["Zone", 3]],
  -#     label_html: { class: "header-label"},
  -#     input_html: { class: "select-fare-structure"}
    -#
    -# = f.simple_fields_for :fare_structures do |fare|
    -#   - fare_structure = fare.object
    -#   -# = render partial: 'services/paratransit_fares/form', locals: {fare_structure: fare.object}
    -#   .col-sm-3
    -#     = translate_helper(:fare_type)
    -#   .col-sm-9
    -#     %input.hidden{name:'service[base_fare_structure_attributes][id]', value: fare_structure.id}
    -#     %select.form-control#fare_type_select{name: 'service[base_fare_structure_attributes][fare_type]'}
    -#       %option{value: FareStructure::FLAT}
    -#         = translate_helper(:flat_fare)
    -#       %option{value: FareStructure::MILEAGE}
    -#         = translate_helper(:mileage_fare)
    -#       %option{value: FareStructure::ZONE}
    -#         = translate_helper(:zone_fare)
    -#   .row#fare_type_form
    -#     - fare_type = fare_structure.fare_type
    -#     - is_flat_fare = fare_type == FareStructure::FLAT
    -#     - is_mileage_fare = fare_type == FareStructure::MILEAGE
    -#     - is_zone_fare = fare_type == FareStructure::ZONE
    -#     .paratransit-flat-fare{style: "#{is_flat_fare ? '' : 'display:none;'}"}
    -#       = render partial: 'services/paratransit_fares/flat_fare_fields', locals: {fare_structure: fare_structure}
    -#     .paratransit-mileage-fare{style: "#{is_mileage_fare ? '' : 'display:none;'}"}
    -#       = render partial: 'services/paratransit_fares/mileage_fare_fields', locals: {fare_structure: fare_structure}
    -#     .paratransit-zone-fare{style: "#{is_zone_fare ? '' : 'display:none;'}"}
    -#       - if fare_structure.service && fare_structure.service.id
    -#         = render partial: 'services/paratransit_fares/zone_fare_fields', locals: {fare_structure: fare_structure}
    -#       - else
    -#         .col-sm-12
    -#           = translate_helper(:zone_fare_new_service_warning)

    -# - else
    -#   %h4 No Fare Structures
    -#   -# = f.simple_fields_for :fare_structures do |fare|
    -#   -#   = fare.input :base, label: translate_helper(:base_rate), input_html: {class: "form-control"}
    -#   -#   = fare.input :rate, label: translate_helper(:mileage_rate), input_html: {class: "form-control"}
    -#   -#   = f.input :taxi_fare_finder_city, label: translate_helper(:taxi_fare_finder_city)

  .pull-right
    = f.button :submit, translate_helper(:save), class: "btn btn-default btn-svc-data save-service-form-btn"
    .btn.btn-link.hidden.edit-service-form-btn edit

:javascript
  $(document).ready(function() {

    // Setup form, setting parameters via (ruby) string interpolation
    var form = new ServiceForm("#{service_id}", "#{form_index}", ("#{new_service}" === "true"));

    // Display appropriate booking service form on menu select
    form.$('.select-booking-profile').on('change', function(e) {
      var bs = this.value;
      form.$('.booking-profile-form-container').addClass('hidden');
      form.$(`.booking-profile-form-container.agency-${bs}`).removeClass('hidden');
    });

    form.$('.btn-ridepilot-test-connection').on("click", function(){
      form.$('.btn-ridepilot-test-connection').prop('disabled', true);
      var ridepilot_endpoint = form.$('.input-ridepilot-profile-endpoint').val();
      var ridepilot_api_token = form.$('.input-ridepilot-profile-api-token').val();
      var ridepilot_provider_id = form.$('.input-ridepilot-profile-provider-id').val();

      $.ajax({
        url: '/services/authenticate_booking_settings?booking_profile=' + '#{BookingServices::AGENCY[:ridepilot]}' + '&endpoint=' + ridepilot_endpoint + '&api_token=' + ridepilot_api_token + '&provider_id=' + ridepilot_provider_id,
        method: 'GET',
        success: function(result){
          form.$('.btn-ridepilot-test-connection').prop('disabled', false);
          form.$('.ridepilot-response').text(result['message']);
          form.$('.ridepilot-response').removeClass('hidden');
        },
        error: function(result){
          form.$('.btn-ridepilot-test-connection').prop('disabled', false);
          form.$('.ridepilot-response').text(result['message']);
          form.$('.ridepilot-response').removeClass('hidden');
        }
      });
    });

  });
