=simple_form_for @user, :html => { :class => "form-horizontal"}, method: 'post', wrapper: :horizontal_form, wrapper_mappings: { check_boxes: :horizontal_radio_and_checkboxes, radio_buttons: :horizontal_radio_and_checkboxes, file: :horizontal_file_input, boolean: :horizontal_boolean }, :include_blank => false  do |f|
  .row
    .col-sm-6.pull-left
      %h2
        = current_user != @user ? "#{@user.name}'s #{t(:travel_profile)}" : t(:travel_profile)
    .col-sm-3.pull-right
      %h2
        = button_tag type: 'submit', class: "btn btn-default action-button default" do
          = icon_label(:apply)
        = link_to t(:cancel), :back, class: "btn btn-default action-button default pull-right"

    
  .row
    .col-sm-6
      .panel.panel-default#user_info
        .panel-heading
          %h3= t(:user_information)
        .panel-body
          = f.input :first_name, label: t(:first_name), :autofocus => true, :required => true
          = f.input :last_name, label: t(:last_name), :required => true
          = f.input :email, label: t(:email), :required => true
          = f.input :preferred_locale, label: t(:preferred_locale), :collection => Translation.available_locales, :include_blank => false
          = f.input :password, label: t(:password), :autocomplete => "off", :required => false
          = f.input :password_confirmation, label: t(:password_confirmation), :hint => t(:leave_password_blank), :required => false
    - if can? :full_read, @user
      .col-sm-6
        .panel.panel-default#agencies
          .panel-heading
            %h3= t(:agencies)
          .panel-body
            = f.association :approved_agencies, collection: Agency.all.order(:name), input_html: {size: 10}, value_method: :agency_id,  as: :check_boxes, wrapper: :inline_checkboxes, label: false
  - if can? :full_read, @user
    .row
      .col-sm-6.pull-left
        .panel.panel-default#buddies
          .panel-heading
            %h3= t(:buddies)
          .panel-body
            = f.association :pending_and_confirmed_delegates, collection: User.registered, label: false, input_html: {size: 6}, as: :check_boxes
      .col-sm-6.pull-right
        .panel.panel-default#travelers
          .panel-heading
            %h3= t(:travelers)
          .panel-body
            = render partial: 'traveler_table', locals: {user: @user}

    =simple_fields_for :user_characteristics_proxy, html: {class: 'form-horizontal'}, wrapper: :h_opts_form, wrapper_mappings: {check_boxes: :h_opts_radio_and_checkboxes, radio_buttons: :h_opts_radio_and_checkboxes, file: :h_opts_file_input, boolean: :h_opts_boolean }  do |characteristic_form|
      .row
        .col-sm-6.pull-left
          .panel.panel-default
            .panel-heading
              %h3= t(:eligibility)
            .panel-body
              -Characteristic.active.enabled.each do |c| 
                - next if c.code=='age' # TODO kludge
                - case c.datatype
                - when 'bool'
                  = characteristic_form.input c.code.to_sym, collection: [[true, t(:yes_str)], [false, t(:no_str)], ['na', t(:not_sure_str)]], :required => false, as: :radio_buttons, label: t(c.note), label_method: :last, value_method: :first
                - else
                  = characteristic_form.input c.code.to_sym, label: t(c.note)
        .col-sm-6.pull-right
          .panel.panel-default
            .panel-heading
              %h3= t(:accommodations)
            .panel-body
              -Accommodation.where(:datatype => 'bool').each do |a|
                = characteristic_form.input a.code.to_sym, collection: [[true, t(:yes_str)], [false, t(:no_str)], ['na', t(:not_sure_str)]], :required => false, as: :radio_buttons, label: t(a.note), label_method: :last, value_method: :first

    .row
      .col-sm-6
        .panel.panel-default#booking
          .panel-heading
            %h3="[en]Booking Information[/en]"
          .panel-body
            =simple_fields_for :user_service, html: {class: 'form-horizontal'}, wrapper: :h_opts_form do |booking_form|
              -Service.where("booking_service_code IS NOT NULL").each do |service|
                - user_service = UserService.where(service: service, user_profile: @user.user_profile).first
                - if user_service
                  = booking_form.input service.id.to_s, label: service.name, input_html: { value: user_service.external_user_id}
                - else
                  = booking_form.input service.id.to_s, label: service.name, input_html: { value: "" }