= simple_form_for @ratings_proxy, url: ratings_path, input_html: {class: "form-horizontal"} do |f|
  .modal-header
    .row
      .col-sm-12
        %btn.btn.action-button.pull-right#hide_feedback{data: {dismiss: "modal"}}= t(:cancel)
        = f.submit t(:apply), class: "btn action-button pull-right"
        = simple_fields_for @ratings_proxy.rater do |rater|
          = rater.input :id, as: :hidden
  - @ratings_proxy.rateables.each do |rateable|
    = simple_fields_for :ratings, rateable.ratings.build, index: rateable.class.name do |ratings_form|
      .panel.panel-default
        .panel-heading
          %h3.panel-title= rateable.to_s
        .panel-body
          -# the ratings_radio wrapper uses an inline span rather than a block div, so wrap it in a .row to keep from breaking
          .stars
            -# using collection_radio_buttons for add'l control over formatting.  See http://rubydoc.info/github/plataformatec/simple_form/master/SimpleForm/FormBuilder:collection_radio_buttons for API
            = ratings_form.label t(:feedback_rating)
            .align-left.clearfix
              %span.pull-left
                = ratings_form.collection_radio_buttons( :value, Rating.options, :first, :last, boolean_style: nil, item_wrapper_tag: nil)
              %a.clear= t(:clear)
          = ratings_form.input :comments, label: t(:comments), placeholder: t(:feedback_comments)
          = ratings_form.input :id, as: :hidden, :input_html => { :value => rateable.id }
-# Add in clear functionality for the clear button.
:javascript
  $(document).ready(function() {
    $("a.clear").on("click", function() {
      $(this).closest(".stars").find("input:checked").prop("checked", false);
    });
    $("#hide_feedback").on("click", function() {
      $("#ratings").show();
      $("#give_feedback").hide();
    });
  });