= form_tag approve_ratings_path, method: :patch do
  .row.info-header
    .col-sm-6
      %h1= t(:feedback)
    .col-sm-6.btns
      = link_to t(:cancel), ratings_path, class: "btn action-button pull-right"
      = submit_tag t(:apply), class: "btn action-button pull-right"
  .row
    .col-sm-12
      %table.table.table-condensed.table-striped.table-bordered.table-hover#ratings_table
        %thead
          %tr
            %th= t(:username)
            %th.center= t(:rating_targets)
            %th.rating.hidden= t(:rating)
            %th.rating_in_stars.nowrap= t(:rating)
            %th= t(:comments)
            %th= t(:approve)
            %th= t(:reject)
            %th= t(:created)
        %tbody
          - @ratings.pending.decorate.each do |rating|
            %tr
              -#TODO Change this from creator.  Use person who took a trip?
              %td= rating.user.name
              %td.center
                %btn.btn.action-button.inspect_rateable{data: {id: rating.id, toggle:"modal", target: '#rateable_modal'}}= rating.rateable_desc
              %td.hidden= rating.value
              %td.rating_in_stars.nowrap= rating.rating_in_stars
              %td= rating.comments
              %td
                = label_tag "#{rating.id}_#{Rating::APPROVED}", t(:approve), class: "sr-only"
                -# Do not internationalize.  That will break the label.  Leave the label text itself internationalized
                = radio_button_tag "#{rating.id}", Rating::APPROVED
              %td
                = label_tag "#{rating.id}_#{Rating::REJECTED}", t(:reject), class: "sr-only"
                -# Do not internationalize.  That will break the label.  Leave the label text itself internationalized
                = radio_button_tag "#{rating.id}", Rating::REJECTED 
              %td
                =l(rating.created_at, :format => :short)
#rateable_modal.modal.fade
  .modal-dialog.modal-lg
    .modal-content
      
-# Because DataTables messes with the DOM, forms only submit rows on the visible page.  Therefore, we override the native submit and fake it with carefully crafted AJAX
:javascript
$(document).ready( function() {
  $("btn.inspect_rateable").on("click", function() {
    $.ajax({
      type: "GET",
      url: "ratings/context",
      dataType: "html",
      data: {
        id: $(this).attr("data-id")
      }
    })
    .done(function(data) {
      $("#rateable_modal .modal-content").html(data);
    });
  });
  $("input[type='submit']").click(function( event ) {
    event.preventDefault();
    $.ajax({
      type: "POST",
      url: "/ratings/approve",
      data: {
        "utf8":"âœ“", 
        "_method":"patch",
        "authenticity_token": $("input[name=authenticity_token]").val(),
        "approve": $("input:checked", table.fnGetNodes()).serialize()
      },
      success: function() { location.reload(true) }
    })
  });
  var table = $('#ratings_table').dataTable( {
    "aaSorting": [[ 7, "desc" ]],
    "aoColumnDefs": [
      { "iDataSort": 2, "aTargets": [ 3 ] },
      { "bSortable": false, "aTargets": [ 5,6 ] },
      { "bSearchable": false, "aTargets": [ 5,6 ] }
    ],
    "oLanguage": {
              "sLengthMenu": "Display _MENU_ ratings per page",
              "sZeroRecords": "Nothing found - sorry",
              "sInfo": "Showing _START_ to _END_ of _TOTAL_ ratings",
              "sInfoEmpty": "Showing 0 to 0 of 0 agencies",
              "sInfoFiltered": "(filtered from _MAX_ total ratings)",
    },
    "bAutoWidth": false,
    "aoColumnDefs": [
      { "sWidth": "10%", "aTargets": [ 1 ] },
      { "sWidth": "40%", "aTargets": [ 4 ] },
      { "sWidth": "5%", "aTargets": [ 5,6 ] }
    ],
    "sDom": "<'row'<'col-sm-6'f>><'row'<'col-sm-6'l>r>t<'row'<'col-sm-6'i><'col-sm-6'p>>",
  } );
});
  